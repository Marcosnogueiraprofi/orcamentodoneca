import streamlit as st
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.platypus import Paragraph, Spacer
from reportlab.lib.units import inch
import io
import base64

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Gerador de Or√ßamentos - Resolve",
    page_icon="üìÑ",
    layout="centered"
)

# T√≠tulo do aplicativo
st.title("üìÑ Gerador de Or√ßamentos - Resolve")
st.subheader("Pronto Neca, fa√ßa teus or√ßamentos!")

# Formul√°rio para entrada de dados
with st.form("orcamento_form"):
    col1, col2 = st.columns(2)
    
    with col1:
        numero_orcamento = st.text_input("N√∫mero do Or√ßamento*", value="201")
        cliente = st.text_input("Cliente*", value="Casar√£o Im√≥veis")
        responsavel = st.text_input("Respons√°vel (A/C)*", value="S√©rgio Ant√¥nio")
    
    with col2:
        endereco_imovel = st.text_input("Endere√ßo do Im√≥vel*", value="General Neto n¬∫ 446 - Rio Grande/RS")
        valor_total = st.number_input("Valor Total (R$)*", min_value=0.0, value=26000.0, step=100.0)
    
    descricao_servicos = st.text_area(
        "Descri√ß√£o dos Servi√ßos*",
        value="""Pintura geral interna e externa.

Externo: lavagem das paredes, reparos na alvenaria, pintura com uma m√£o de fundo preparador e duas de m√£o com tinta acr√≠lica emborrachada.
Lixamento e pintura das grades com aplica√ß√£o de duas de m√£o de esmalte sint√©tico;
Fachada: Limpeza e reparos na alvenaria e pintura com uma de m√£o de fundo preparador e duas de m√£o de tinta acr√≠lica;
Lixamento e pintura dos suportes dos ares condicionados;
Limpeza e lavagem do p√°tio;

Interno: lavagem das paredes, reparos na alvenaria, gesso e aplica√ß√£o de uma de m√£o de fundo preparador e duas de m√£o de tinta acr√≠lica semibrilho;
Lavagem, lixamento e pintura das portas, com esmalte sint√©tico fosco;
Troca da porta que d√° acesso ao p√°tio;""",
        height=300
    )
    
    observacoes = st.text_input("Observa√ß√µes", value="Material incluso.")
    
    submitted = st.form_submit_button("Gerar Or√ßamento em PDF")

# Fun√ß√£o para criar o PDF com ReportLab
def create_pdf(data):
    buffer = io.BytesIO()
    c = canvas.Canvas(buffer, pagesize=letter)
    width, height = letter
    
    # Estilos
    styles = getSampleStyleSheet()
    title_style = ParagraphStyle(
        'Title',
        parent=styles['Heading1'],
        fontSize=16,
        alignment=1,  # 0=Left, 1=Center, 2=Right
        spaceAfter=12
    )
    
    subtitle_style = ParagraphStyle(
        'Subtitle',
        parent=styles['Heading2'],
        fontSize=14,
        spaceAfter=6
    )
    
    normal_style = styles['Normal']
    bold_style = styles['Heading3']
    italic_style = ParagraphStyle(
        'Italic',
        parent=styles['Italic'],
        fontSize=10,
        spaceAfter=6
    )
    
    # Cabe√ßalho
    p = Paragraph("OR√áAMENTO", title_style)
    p.wrapOn(c, width, height)
    p.drawOn(c, 0, height - 1*inch)
    
    # N√∫mero do or√ßamento
    p = Paragraph(f"<b>OR√áAMENTO N¬∫ {data['numero_orcamento']}</b>", subtitle_style)
    p.wrapOn(c, width, height)
    p.drawOn(c, 0.5*inch, height - 1.5*inch)
    
    # Informa√ß√µes do cliente
    y_position = height - 2*inch
    c.setFont("Helvetica", 12)
    c.drawString(0.5*inch, y_position, f"√Ä {data['cliente']}")
    y_position -= 0.25*inch
    c.drawString(0.5*inch, y_position, f"A/C {data['responsavel']}")
    y_position -= 0.25*inch
    c.drawString(0.5*inch, y_position, f"Im√≥vel: {data['endereco_imovel']}")
    y_position -= 0.5*inch
    
    # Descri√ß√£o dos servi√ßos
    c.setFont("Helvetica-Bold", 12)
    c.drawString(0.5*inch, y_position, "Descri√ß√£o dos Servi√ßos")
    y_position -= 0.25*inch
    
    c.setFont("Helvetica", 12)
    text_lines = data['descricao_servicos'].split('\n')
    for line in text_lines:
        if line.strip() == "":
            y_position -= 0.25*inch
            continue
        c.drawString(0.5*inch, y_position, line)
        y_position -= 0.25*inch
    
    y_position -= 0.5*inch
    
    # Valor total
    valor_formatado = f"{data['valor_total']:,.2f}".replace(",", "X").replace(".", ",").replace("X", ".")
    c.drawString(0.5*inch, y_position, f"Valor da m√£o de obra e material = R$ {valor_formatado}")
    y_position -= 0.5*inch
    
    # Observa√ß√£o
    c.setFont("Helvetica-Oblique", 12)
    c.drawString(0.5*inch, y_position, f"Obs: {data['observacoes']}")
    y_position -= 0.75*inch
    
    # Total
    c.setFont("Helvetica-Bold", 14)
    c.drawRightString(width - 0.5*inch, y_position, "TOTAL:")
    y_position -= 0.25*inch
    c.setFont("Helvetica-Bold", 16)
    c.drawRightString(width - 0.5*inch, y_position, f"R${valor_formatado}")
    
    c.save()
    buffer.seek(0)
    return buffer

# Processar o formul√°rio quando enviado
if submitted:
    if not all([numero_orcamento, cliente, responsavel, endereco_imovel, descricao_servicos]):
        st.error("Por favor, preencha todos os campos obrigat√≥rios (*)")
    else:
        data = {
            "numero_orcamento": numero_orcamento,
            "cliente": cliente,
            "responsavel": responsavel,
            "endereco_imovel": endereco_imovel,
            "descricao_servicos": descricao_servicos,
            "valor_total": valor_total,
            "observacoes": observacoes
        }
        
        pdf_buffer = create_pdf(data)
        
        st.success("Or√ßamento gerado com sucesso!")
        
        # Bot√£o de download
        st.download_button(
            label="üì• Baixar Or√ßamento em PDF",
            data=pdf_buffer,
            file_name=f"Orcamento_Resolve_{numero_orcamento}.pdf",
            mime="application/pdf"
        )
        
        # Pr√©-visualiza√ß√£o (opcional)
        with st.expander("Visualizar dados do or√ßamento"):
            st.write(f"**OR√áAMENTO N¬∫ {numero_orcamento}**")
            st.write(f"**Cliente:** {cliente}")
            st.write(f"**Respons√°vel:** {responsavel}")
            st.write(f"**Im√≥vel:** {endereco_imovel}")
            st.write("---")
            st.write("**Descri√ß√£o dos Servi√ßos:**")
            st.write(descricao_servicos)
            st.write("---")
            st.write(f"**Valor Total:** R$ {valor_total:,.2f}".replace(",", "X").replace(".", ",").replace("X", "."))
            st.write(f"*Obs: {observacoes}*")
